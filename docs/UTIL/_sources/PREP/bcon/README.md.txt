BCON
========

The program BCON prepares chemical boundary conditions (BCs) for the CMAQ
Chemistry Transport Model (CCTM). BCON will generate an output file with
chemical concentrations for all grid cells along the modeling domain's
horizontal boundaries.  Depending on user specified options and/or input
datasets, the BCs generated by BCON can be time varying, time independent, and
either spatially uniform or variable across the model boundaries. If deriving
BCs from the ASCII vertical profiles, BCON creates spatially uniform, time
independent BCs. From concentration (CONC) files, BCON extracts spatially
varying BCs, either on the same grid cell resolution (windowed modeling domain),
or for a finer grid resolution modeling domain (nested modeling domain).  BCs
generated from CONC files are time dependent if the input CONC file is time
stepped, or time independent if the CONC file time step is zero.

There are two distinct modes of operation for BCON.  When running BCON, the
user must specify whether to generate BCs from:  (1) an existing CONC file
(*regrid*); or (2) an ASCII file of vertical profiles (*profile*).

The User's Guide contains a [tutorial on how to use BCON to create boundary conditions from seasonal or daily average hemispheric CMAQ output files](../../DOCS/Users_Guide/Tutorials/CMAQ_UG_tutorial_HCMAQ_IC_BC.md) distributed through the CMAS data warehouse.

CMAQ can also use boundary conditions derived from global chemistry models
(GCMs). While BCON does not directly support processing of datasets from GCMs
(in their native formats), users could develop their own custom codes to
transform their GCM datasets into I/O API format, which would then allow these
datasets to be input into BCON to generate BCs for the CCTM. In addition, other
tools exist in the community to generate BCs from GCMs. For example, the CAMx
developers (Ramboll Environ) have codes available for extracting regional model
BCs from both GEOS- Chem and MOZART. Visit the [Support Software section of
www.CAMx.com](https://www.camx.com/download/support-software/) to download
these utilities.

## Runtime Environment Variables:

**Table 1. Runtime Environment Variables**

|**Variable Name**|**Example in Runscript**|**Description**|
|---------------------|-------------|-----------------------------------------------------------------------|
|VRSN|v53|Identifies version for the BCON run. Its value should be consistent between BCON build and run scripts for an individual application.|
|APPL|SE53BENCH|Identifies the intent of the BCON run such as the model domain and chemical mechanism used. Value is the user's preference.|
|BCTYPE|regrid, profile|Specifies which BC type to generate.|
|EXEC|BCON_${VRSN}.exe|Executable to use for the BCON run. |
|GRIDDESC|$CMAQ_HOME/scripts/GRIDDESC1|Grid description file for setting the horizontal grid definition for the target domain.|
|GRID_NAME|SE53BENCH|Name of the grid definition contained in the GRIDDESC file that specifies the horizontal grid for the target domain.|
|OUTDIR|$CMAQ_HOME/data/bcon|Output data directory|
|DATE|2016183|Sets the Julian date to use in naming the BCON output file for the regrid BC type|
|SDATE|0|Julian start date for extracting boundary conditions from a CCTM CONC file. If SDATE is not set, it will be set automatically from the MET_BDY_3D_FIN file.|
|STIME|0|Start time for extracting boundary conditions from a CCTM CONC file. If STIME is not set, it will be set automatically from the MET_BDY_3D_FIN file.|
|RUNLEN|0|Run length for extracting boundary conditions from a CCTM CONC file. If RUNLEN is not set, it will be set automatically from the MET_BDY_3D_FIN file.
|IOAPI_ISPH|20|I/O API setting for spheroid type. See I/O API documentation for [setsphere](https://www.cmascenter.org/ioapi/documentation/all_versions/html/SETSPHERE.html) for more information.|
|IOAPI_OFFSET_64|YES|I/O API setting for large time-step records. If your output time step is going to produce data that are >2GB per time step, then this needs to be set to YES.|

## BCON input files

**Table 2. BCON input files for BCTYPE equals "regrid"**

|**File Name**|**Format**|**Description**|
|---------------------|-------------|-----------------------------------------------------------------------|
|GRIDDESC|ASCII|Horizontal grid description file for defining the model grid for the target domain; this file is output by MCIP or can be created by the user|
|CTM_CONC_1|IOAPI/GRDDED3|Name and location of the CMAQ concentration file from which to derive boundary conditions|
|MET_CRO_3D_CRS|IOAPI/GRDDED3|Name and location of the coarse-grid (or source modeling domain) MET_CRO_3D file|
|MET_BDY_3D_FIN|IOAPI/BNDARY3|Name and location of the fine-grid (or target modeling domain) MET_BDY_3D file|

**Table 3. BCON input files for BCTYPE equals "profile"**

|**File Name**|**Format**|**Description**|
|---------------------|-------------|-----------------------------------------------------------------------|
|GRIDDESC|ASCII|Horizontal grid description file for defining the model grid for the target domain; this file is output by MCIP or can be created by the user|
|BC_PROFILE|ASCII|Vertical chemical profiles from which to derive boundary conditions; this file is created by the user|
|MET_BDY_3D_FIN|IOAPI/BNDARY3|Name and location of the fine-grid (or target modeling domain) MET_BDY_3D file|

## BCON output files

**Table 3. BCON output files**

**>>Comment<<** File name needs to be changed to variable name. 

|**File Name**|**Format**|**Description**|
|------------|-----------|---------------------------------------------------------------|
|BNDY_CONC_1|BNDARY3|Name and location of the gridded boundary conditions data output on the model grid defined VRSN, BCTYPE, APPL, and DATE |

The default location of the BCON output files is the `$CMAQ_DATA/bcon`
directory, controlled by the `OUTDIR` variable in the run script. The default
naming convention for all BCON output files uses the `APPL` and `GRID_NAME`
environment variables in the file name. For boundary conditions created from
existing `CCTM CONC` files, the Julian date is also used in the file name
through the `DATE` environment variable. All of the file-naming variables for
`BCON` outputs are set in the run script.

## Compile BCON source code

Execute the build script to compile BCON:

```
cd $CMAQ_HOME/PREP/bcon/scripts
./bldit_bcon.csh [compiler] [version] |& tee build_bcon.log
```

## Run BCON

Set the run script settings according to the execution configuration variables
described above. Run BCON to produce boundary conditions for the CCTM:

```
cd $CMAQ_HOME/PREP/bcon/scripts
./run_bcon.csh |& tee run_bcon.log
```

Check the log file to ensure complete and correct execution without errors.

